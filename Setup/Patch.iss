; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
AppName=Bloodmasters
AppVerName=Bloodmasters 1.2
AppPublisher=CodeImp
AppPublisherURL=http://www.bloodmasters.com
AppSupportURL=http://www.bloodmasters.com
AppUpdatesURL=http://www.bloodmasters.com
DefaultDirName={pf}\Bloodmasters
DefaultGroupName=Bloodmasters
AllowNoIcons=true
LicenseFile=
OutputDir=E:\Projects\Bloodmasters\Setup
OutputBaseFilename=bm_patch
Compression=lzma
SolidCompression=true
SourceDir=E:\Projects\Bloodmasters\Setup\Patch
ShowLanguageDialog=no
LanguageDetectionMethod=uilanguage
InfoBeforeFile=E:\Projects\Singleline Disclaimer.txt
WizardImageFile=compiler:wizmodernimage-is.bmp
WizardSmallImageFile=compiler:wizmodernsmallimage-is.bmp

[Languages]
Name: eng; MessagesFile: compiler:Default.isl

[Tasks]

[Files]
Source: Bloodmasters.exe; DestDir: {app}
Source: BMLauncher.exe; DestDir: {app}
Source: bmserver.exe; DestDir: {app}
Source: ip-to-country.csv; DestDir: {app}
Source: portalpestctf.zip; DestDir: {app}
Source: cornish.zip; DestDir: {app}
Source: cornishctf.zip; DestDir: {app}
Source: dusk.zip; DestDir: {app}
Source: duskctf.zip; DestDir: {app}

[INI]

[Icons]

[Run]
Filename: {app}\BMLauncher.exe; Description: Play Bloodmasters now; Flags: nowait postinstall skipifsilent; Check: IsAllInstalled
Filename: http://www.microsoft.com/directx/; Description: Open DirectX download website; Flags: nowait shellexec postinstall skipifsilent; Check: not IsDXInstalled
Filename: http://www.microsoft.com/downloads/details.aspx?FamilyID=0856eacb-4362-4b0d-8edd-aab15c5e04f5&displaylang=en; Flags: nowait shellexec postinstall skipifsilent; Check: not IsNetInstalled; Description: Open Microsoft .NET Framework download website

[UninstallDelete]
Type: files; Name: {app}\BMLauncher.url

[Code]
var
	dxinstalled: Boolean;
	netinstalled: Boolean;
	configchecked: Boolean;
	configanswer: Boolean;


// This decodes a DirectX version
procedure DecodeVersion( verstr: String; var verint: array of Integer );
var
  i,p: Integer; s: string;
begin
  // initialize array
  verint := [0,0,0,0];
  i := 0;
  while ( (Length(verstr) > 0) and (i < 4) ) do
  begin
  	p := pos('.', verstr);
  	if p > 0 then
  	begin
      if p = 1 then s:= '0' else s:= Copy( verstr, 1, p - 1 );
  	  verint[i] := StrToInt(s);
  	  i := i + 1;
  	  verstr := Copy( verstr, p+1, Length(verstr));
  	end
  	else
  	begin
  	  verint[i] := StrToInt( verstr );
  	  verstr := '';
  	end;
  end;

end;


// This function compares version string
// return -1 if ver1 < ver2
// return  0 if ver1 = ver2
// return  1 if ver1 > ver2
function CompareVersion( ver1, ver2: String ) : Integer;
var
  verint1, verint2: array of Integer;
  i: integer;
begin

  SetArrayLength( verint1, 4 );
  DecodeVersion( ver1, verint1 );

  SetArrayLength( verint2, 4 );
  DecodeVersion( ver2, verint2 );

  Result := 0; i := 0;
  while ( (Result = 0) and ( i < 4 ) ) do
  begin
  	if verint1[i] > verint2[i] then
  	  Result := 1
  	else
      if verint1[i] < verint2[i] then
  	    Result := -1
  	  else
  	    Result := 0;

  	i := i + 1;
  end;

end;


// DirectX version is stored in registry as 4.majorversion.minorversion
// DirectX 8.0 is 4.8.0
// DirectX 8.1 is 4.8.1
// DirectX 9.0 is 4.9.0
function GetDirectXVersion(): String;
var
  sVersion:  String;
begin
  sVersion := '';

  RegQueryStringValue( HKLM, 'SOFTWARE\Microsoft\DirectX', 'Version', sVersion );

  Result := sVersion;
end;


// This will look for installed components when Setup starts up
function InitializeSetup(): Boolean;
begin
		// Test dependencies
		netinstalled := (RegKeyExists(HKLM,'SOFTWARE\Microsoft\.NETFramework\policy\v2.0') = true);
		dxinstalled := (CompareVersion(GetDirectXVersion(), '4.9.0') >= 0);

		// Always continue
		Result := true;
end;


// Here follow methods to check the result of installed components.
function IsDXInstalled(): Boolean;
begin
	Result := dxinstalled;
end;

function IsNetInstalled(): Boolean;
begin
	Result := netinstalled;
end;

function IsAllInstalled(): Boolean;
begin
	Result := dxinstalled and netinstalled;
end;


// This will show messages depending on installed components, after installation.
procedure CurPageChanged(CurPageID: Integer);
begin
	// Installation done page?
	if(CurPageID = wpFinished) then
	begin
		// Test .NET 2.0
		if (IsNetInstalled() = false) then
			MsgBox('Microsoft .NET Framework 2.0 is not installed. This game requires the latest version of Microsoft .NET Framework.'#10'Please download and install the latest version before playing this game.', mbError, MB_OK);

		// Test DirectX 9.0
		if (IsDXInstalled() = false) then
			MsgBox('Microsoft DirectX 9 is not installed. You need Microsoft DirectX 9 or later for this game to run properly.'#10'Please upgrade your DirectX version at http://www.microsoft.com/directx.', mbError, MB_OK);
	end
end;


// This will ask to overwrite the configuration file.
function OverwriteConfig(): Boolean;
begin
	if not configchecked then
	begin
		// Check if file already exists
		if FileExists(ExpandConstant(CurrentFileName)) then
			configanswer := MsgBox('Do you want to overwrite your Bloodmasters configuration?'#10'You will lose all configured settings, but it could fix any configuration issues you might have.', mbConfirmation, MB_YESNO or MB_DEFBUTTON2) = IDYES
		else
			configanswer := true;

		// Asked
		configchecked := true;
	end

	// Return result
	Result := configanswer;
end;




