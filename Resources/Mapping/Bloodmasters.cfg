/*************************************************************\
	Doom Builder Game Configuration for Bloodmasters
\*************************************************************/

// This is required to prevent accedential use of a different configuration
type = "Doom Builder Game Configuration";

// This is the title to show for this game
game = "Bloodmasters";

// Map format determines the way the map will be loaded
mapformat = 2;

// No generalized types
generalizedlinedefs = 0;
generalizedsectors = 0;

// Engine specific features
mixtexturesflats = 1;
defaulttexturescale = 2;

// Thing number for start position in 3D Mode
start3dmode = 32000;

// Load textures/flats by default from this file
texturesfile = "";

// Default lump name for new map
defaultlumpname = "BMMAP";

// Default flags for first new thing
defaulthingflags = 127; // 1 + 2 + 4 + 8 + 16 + 32 + 64


/*
TEXTURES AND FLAT SOURCES
This tells Doom Builder where to find the information for textures
and flats in the IWAD file, Addition WAD file and Map WAD file.

Start and end lumps must be given in a structure (of which the
key name doesnt matter) and any textures or flats in between them
are loaded in either the textures category or flats category.

For textures: PNAMES, TEXTURE1 and TEXTURE2 are loaded by default.
*/

// Texture sources
textures
{
	zdoom1
	{
		start = "TX_START";
		end = "TX_END";
	}
}

// Flat sources
flats
{
	standard1
	{
		start = "F_START";
		end = "F_END";
	}
	
	standard2
	{
		start = "FF_START";
		end = "FF_END";
	}
	
	standard3
	{
		start = "FF_START";
		end = "F_END";
	}
	
	standard4
	{
		start = "F_START";
		end = "FF_END";
	}
}


/*
TEXTURES AND FLATS FILTERING
This allows you to filter textures and flats so that you only see the
textures/flats listed that you prefer to use.

The key name doesnt matter here, only the values. You can use
the following wildcards in values to specify ranges:

? = Any character
* = Zero or more characters
# = Any numeric digit
[abc...] = Any of these characters that are between brackets
[!abc..] = Not any of these characters that are between brackets
*/

// List these textures...
texturesfilter
{
	all_textures = "*";
}

// But do not list these textures...
notexturesfilter
{
	none = "";
}

// List these flats...
flatsfilter
{
	all_flats = "*";
}

// But do not list these flats...
noflatsfilter
{
	none = "";
}


/*
GAME DETECT PATTERN
Used to guess the game for which a WAD file is made.

1 = One of these lumps must exist
2 = None of these lumps must exist
3 = All of these lumps must exist
*/

gamedetect
{
	EXTENDED = 2;
	BEHAVIOR = 2;
     E1M1 = 2; E1M2 = 2; E1M3 = 2; E1M4 = 2; E1M5 = 2; E1M6 = 2; E1M7 = 2; E1M8 = 2; E1M9 = 2;
	E2M1 = 2; E2M2 = 2; E2M3 = 2; E2M4 = 2; E2M5 = 2; E2M6 = 2; E2M7 = 2; E2M8 = 2; E2M9 = 2;
	E3M1 = 2; E3M2 = 2; E3M3 = 2; E3M4 = 2; E3M5 = 2; E3M6 = 2; E3M7 = 2; E3M8 = 2; E3M9 = 2;
	E4M1 = 2; E4M2 = 2; E4M3 = 2; E4M4 = 2; E4M5 = 2; E4M6 = 2; E4M7 = 2; E4M8 = 2; E4M9 = 2;
	MAP01 = 2; MAP02 = 2; MAP03 = 2; MAP04 = 2; MAP05 = 2; MAP06 = 2; MAP07 = 2; MAP08 = 2; MAP09 = 2; MAP10 = 2;
	MAP11 = 2; MAP12 = 2; MAP13 = 2; MAP14 = 2; MAP15 = 2; MAP16 = 2; MAP17 = 2; MAP18 = 2; MAP19 = 2; MAP20 = 2;
	MAP21 = 2; MAP22 = 2; MAP23 = 2; MAP24 = 2; MAP25 = 2; MAP26 = 2; MAP27 = 2; MAP28 = 2; MAP29 = 2; MAP30 = 2;
	MAP31 = 2; MAP32 = 2; MAP33 = 2; MAP34 = 2; MAP35 = 2; MAP36 = 2; MAP37 = 2; MAP38 = 2; MAP39 = 2; MAP40 = 2;
	MAP41 = 2;
	BMMAP = 1;
	CONFIG = 1;
}


/*
MAP LUMP NAMES
Map lumps are loaded with the map as long as they are right after each other. When the editor
meets a lump which is not defined in this list (or defined as 0) it will stop loading right there.

The order of items defines the order in which lumps will be written to WAD file on save.
The value (flags) of items determines what the editor should do with it.
You should never mess with value 4, because it may result in incorrect map builds.

1 = Map lump required
2 = Map lump which must be respected
4 = Lump generated by node builder
8 = Lump allowed to be empty after nodebuilding
16 = Lump optional from node builder
4096 = Map lump which can be edited as Text
8192 = Map lump which can be edited as ACS
12288 = Map lump which can be edited as DEHACKED
16384 = Map lump which can be edited as FraggleScript
*/

maplumpnames
{
	THINGS = 13;
	LINEDEFS = 5;
	SIDEDEFS = 5;
	VERTEXES = 5;
	SEGS = 4;
	SSECTORS = 4;
	NODES = 4;
	SECTORS = 5;
	REJECT = 12;
	BLOCKMAP = 4;
	BEHAVIOR = 1;
	SCRIPTS = 0;
	GL_BMMAP = 2;
	GL_VERT = 2;
	GL_SEGS = 2;
	GL_SSECT = 2;
	GL_NODES = 2;
	GL_PVS = 2;
	CONFIG = 4096;
}


// DEFAULT SECTOR BRIGHTNESS LEVELS
sectorbrightness
{
	255;
	240;
	224;
	208;
	192;
	176;
	160;
	144;
	128;
	112;
	96;
	80;
	64;
	48;
	32;
	16;
	0;
}

// SECTOR TYPES
sectortypes
{
	0 = "Normal";
	1 = "Proximity Door";
	2 = "Proximity Door Field";
	3 = "Damage (slow)";
	4 = "Damage (fast)";
	5 = "Instant Death";
	6 = "Invisible";
	7 = "Fixed Light";
	8 = "Automatic Door (fast)";
	9 = "Automatic Door (slow)";
	10 = "Low Platform";
	11 = "High Platform";
	12 = "Platform Field";
	13 = "No merging";
}

// LINEDEF FLAGS
linedefflags
{
	1 = "Solid wall";
	2 = "Impassible";
	4 = "Double Sided";
	8 = "No shadow";
}

// LINEDEF ACTIVATIONS
linedefactivations
{
	0 = "Player walks over";
	4096 = "Projectile hits or crosses";
}

// LINEDEF TYPES
// [type] [category] [description]
// i know this should be done the same way as the things types,
// but hey, are you willing to reformat the linedef types for each config?
linedeftypes
{
	0 = "  Normal";
	
	1
	{
		title = "H Color Black Gradient";
		arg1 = "Top light";
	}
	
	2
	{
		title = "H Teleport";
		arg1 = "Target";
		mark1 = 2;
	}
	
	3
	{
		title = "H Instant Gib";
	}
}

// THING FLAGS
thingflags
{
	1 = "Deathmatch";
	2 = "Team Deathmatch";
	4 = "Capture The Flag";
	8 = "Scavenger";
	16 = "Team Scavenger";
}

// THING FLAGS ERROR MASK
// Mask for the thing flags which indicates the options
// that make the same thing appear in the same modes
thingflagsmask1 = 0;
thingflagsmask2 = 0;


// THING TYPES
thingtypes
{
	editor
	{
		color = 15;	// White
		arrow = 1;
		title = "Editor Things";
		width = 16;
		sort = 1;
		height = 0;
		hangs = 0;
		blocking = 0;
		error = 0;
		
		32000 = "3D Mode start";
	}
	
	players
	{
		color = 10;	// Light Green
		arrow = 1;
		title = "Player Starts";
		width = 16;
		sort = 1;
		height = 56;
		hangs = 0;
		blocking = 1;
		error = 2;
		
		1
		{
			title = "Player Deathmatch start";
			sprite = "PLAYA2A8";
		}
		2
		{
			title = "Player Blue Team start";
			sprite = "PLAYA2A8";
		}
		3
		{
			title = "Player Red Team start";
			sprite = "PLAYA2A8";
		}
	}
	
	teleports
	{
		color = 2;	// Green
		arrow = 1;
		title = "Teleports";
		width = 16;
		sort = 1;
		height = 56;
		hangs = 0;
		blocking = 0;
		error = 0;
		
		100
		{
			title = "Teleport Destination";
			sprite = "TFOGB0";
		}
	}
	
	weapons
	{
		color = 14;	// Yellow
		arrow = 0;
		title = "Weapons";
		width = 20;
		height = 25;
		hangs = 0;
		blocking = 0;
		sort = 1;
		
		/*
		1001
		{
			title = "SMG";
		}
		*/
		
		1002
		{
			title = "Minigun";
		}
		
		1003
		{
			title = "Plasma Cannon";
		}
		
		1004
		{
			title = "Rocket Launcher";
		}
		
		1006
		{
			title = "Grenade Launcher";
		}
		
		1007
		{
			title = "Phoenix";
		}
		
		1008
		{
			title = "Ion Cannon";
		}
	}
	
	ammunition
	{
		color = 6;	// Brown
		arrow = 0;
		title = "Ammunition";
		width = 16;
		sort = 1;
		height = 20;
		blocking = 0;
		hangs = 0;
		
		8001
		{
			title = "Chaingun Ammo";
			sprite = "CLIPA0";
		}
		
		8002
		{
			title = "Plasma Cell";
			sprite = "CLIPA0";
		}
		
		8003
		{
			title = "Rockets";
			sprite = "CLIPA0";
		}
		
		8004
		{
			title = "Grenades";
			sprite = "CLIPA0";
		}
		
		8005
		{
			title = "Fuel Cell";
			sprite = "CLIPA0";
		}
	}
	
	health
	{
		color = 1;	// Blue
		arrow = 0;
		title = "Health and Armor";
		width = 16;
		height = 20;
		hangs = 0;
		blocking = 0;
		sort = 1;
		
		2001
		{
			title = "5% Health";
			sprite = "STIMA0";
		}
		
		2002
		{
			title = "25% Health";
			sprite = "STIMA0";
		}
		
		2003
		{
			title = "Megahealth";
			sprite = "STIMA0";
		}
		
		2004
		{
			title = "Light Armor";
		}
		
		2005
		{
			title = "Heavy Armor";
		}
	}
	
	powerups
	{
		color = 3;	// Cyan
		arrow = 0;
		title = "Powerups";
		width = 20;
		height = 40;
		hangs = 0;
		blocking = 0;
		sort = 1;
		
		3001
		{
			title = "Killer";
			sprite = "MEGAA0";
		}
		
		3002
		{
			title = "Sprinter";
			sprite = "MEGAA0";
		}
		
		3003
		{
			title = "Shields";
			sprite = "MEGAA0";
		}
		
		3004
		{
			title = "Ghost";
			sprite = "MEGAA0";
		}
		
		3005
		{
			title = "Nuke";
			sprite = "MEGAA0";
		}
		
		3006
		{
			title = "Avenger";
			sprite = "MEGAA0";
		}
		
		3007
		{
			title = "Static";
			sprite = "MEGAA0";
		}
	}
	
	blueflags
	{
		color = 9;	// Light Blue
		arrow = 0;
		title = "Blue Tokens";
		width = 16;
		height = 20;
		hangs = 0;
		blocking = 0;
		sort = 1;
		
		4001
		{
			title = "Blue flag";
			sprite = "IW_FLAGB";
			height = 32;
		}
		
		4005
		{
			title = "Blue item";
		}
	}
	
	redflags
	{
		color = 12;	// Light Red
		arrow = 0;
		title = "Red Tokens";
		width = 16;
		height = 20;
		hangs = 0;
		blocking = 0;
		sort = 1;
		
		4002
		{
			title = "Red flag";
			sprite = "IW_FLAGR";
			height = 32;
		}
		
		4004
		{
			title = "Red item";
		}
	}
	
	neutralflags
	{
		color = 15;	// White
		arrow = 0;
		title = "Neutral Tokens";
		width = 16;
		height = 20;
		hangs = 0;
		blocking = 0;
		sort = 1;
		
		4003
		{
			title = "Neutral item";
		}
	}
	
	lights
	{
		color = 11;	// Light Cyan
		arrow = 0;
		title = "Lights";
		width = 8;
		sort = 1;
		height = 16;
		blocking = 1;
		hangs = 0;
		
		6001
		{
			title = "Light";
			sprite = "IW_LIGHT";
			arg1 = "Range";
			arg2 = "Red";
			arg3 = "Green";
			arg4 = "Blue";
			arg5 = "Template";
		}
	}
	
	decoration
	{
		color = 4;	// Red
		arrow = 0;
		title = "Decoration";
		width = 8;
		sort = 1;
		height = 16;
		hangs = 0;
		blocking = 0;
		
		7002
		{
			title = "Wall blood decal";
			sprite = "IW_BLOOD";
		}
		
		7003
		{
			title = "Floor blood decal";
			sprite = "IW_BLOOD";
		}
		
		7004
		{
			title = "Rock";
			sprite = "IW_BLOOD";
			arg1 = "Type";
		}
	}
	
	effects
	{
		color = 13;	// Light Magenta
		arrow = 0;
		title = "Effects";
		width = 8;
		sort = 1;
		height = 16;
		hangs = 0;
		blocking = 0;
		
		9000
		{
			title = "Ambient Sound";
			sprite = "IW_SOUND";
			arg1 = "Sound Index";
			arg2 = "Volume";
		}
		
		9001
		{
			title = "Sector Material";
			arg1 = "Material";
			sprite = "IW_MATTR";
			width = 8;
			height = 16;
		}
		
		9002
		{
			title = "Falling Effect";
		}
		
		9003
		{
			title = "Flooded";
			arg1 = "Liquid";
		}

		9004
		{
			title = "Teleport Particles";
		}

		9005
		{
			title = "Steam Particles";
		}
		
		9999
		{
			title = "Movement Sound";
			sprite = "IW_SOUND";
		}
	}
}